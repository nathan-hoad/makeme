makeme

Dependencies:
-------------
Python 3

General:
--------
makeme is a means of remotely controlling your computer via email. It can be
configured to do anything, and respond to any number of commands. The sky is
the limit, it's all about what the user can do.

Installation:
-------------

Simply run the program to test it. If you want to add it to your $PATH,
I suggest using ~/bin with a symbolic link.

The username and passwords MUST be set using the set-user.py script.

   Configuration:
   --------------

   Configuration is very simple in makeme. The global config path is
   /usr/share/makeme/makemerc and the user config is $HOME/.makemerc
   Layout is like ini files.

   [settings]
   username = the username you log into your email address
   password = password associated with username
   refresh_time = how often to check for emails in minutes. There are a few configuration options here.
      N  -- where N is the number of minutes to wait before checking
      hN -- where N is the number of hours to wait before checking
      sN -- where N is the number of seconds to wait before checking
      :N -- where N is the time past the hour to check, e.g. :20 would check at 9:20, 10:20 etc.
      /N -- where N is the number of minutes to wait before checking, normalised. So /10 would be 9:10, 9:20, 9:30 etc.
   log_file = where to log events. Can be full path or filename only to store in current working directory.
   log_format = log format. Should be left as default, but if you want to change it consult the logging documentation.
   date_format = date format for logging. Should be default, but consult logging documentation to change.
   should_fork = True to fork to background, False to stay in foreground.
   log_level = the level of logging you'd like. Should be either debug, critical, error or info.
   reconnect_attempts = the amount of times the server should try to reconnect, if the IMAP or SMTP connections are lost.
   contact_address = the email address the server should contact if a crash occurs, or to send information messages.
   first_email_sent = program controlled value. To get the intro email again, change to False.
   monitor_config = monitor the config file for changes.


   [scripts]
   This section deals with what script to run when particular emails arrive
   (regex expression) = (script name in scripts directory)
   For example:
   start.torrent = torrent.py

   This will search a message for start.torrent, and run torrent.py if it does
   find it. Scripts can be in whatever language you want, as long as they're
   executable it's all good.
